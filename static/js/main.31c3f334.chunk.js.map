{"version":3,"sources":["components/Game/PlayerValue/PlayerValue.module.css","components/Game/CompValue/CompValue.module.css","components/Game/Game.module.css","components/Game/Game.jsx","components/Game/PlayerValue/PlayerValue.jsx","components/Game/CompValue/CompValue.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Game","Container","Row","Col","className","style","header","game","buttonForGame","id","onClick","this","props","handleClick","xs","lg","choise","playerValue","compValue","column","playerPoints","draw","compPoints","winner","React","Component","PlayerValue","itemList","value","map","p","index","key","player","CompValue","c","comp","App","e","preventDefault","currentTarget","getCompChoise","forStatePlayer","forStateComp","newItem","state","whoWinner","setState","prevState","comMove","Math","random","a","b","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31c3f334.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerValue\":\"PlayerValue_playerValue__1KSBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"compValue\":\"CompValue_compValue__4Zb1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Game_header__2H8u_\",\"resultGame\":\"Game_resultGame__XB1oY\",\"choise\":\"Game_choise__2Jw1p\",\"game\":\"Game_game__8YhyC\",\"buttonForGame\":\"Game_buttonForGame__3b1z5\",\"winner\":\"Game_winner__253FB\",\"column\":\"Game_column__1FX8R\"};","import React from \"react\";\r\nimport style from './Game.module.css'\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\nclass Game extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className={style.header}>\r\n                                    <h1>Привет, давай поиграем</h1>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className={style.game}>\r\n                                    <p>Сделай свой выбор</p>\r\n                                    <div className={style.buttonForGame}>\r\n                                        <button id=\"камень\" onClick={this.props.handleClick}>Камень</button>\r\n                                        <button id=\"ножницы\" onClick={this.props.handleClick}>Ножницы</button>\r\n                                        <button id=\"бумага\" onClick={this.props.handleClick}>Бумага</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs lg=\"6\">\r\n                                <div className={style.choise}>\r\n                                    <h3>Игрок выбрал</h3>\r\n                                    <p>{this.props.playerValue}</p>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs lg=\"6\">\r\n                                <div  className={style.choise}>\r\n                                    <h3>Скайнет выбрал <br/> </h3>\r\n                                    <p>{this.props.compValue}</p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col xs lg=\"2\">\r\n                                <div className={style.column}>\r\n                                    <h6>ВЫИГРАЛ</h6>\r\n                                    <span>{this.props.playerPoints}</span>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs lg=\"2\">\r\n                                <div className={style.column}>\r\n                                    <h6>НИЧЬЯ</h6>\r\n                                    <span>{this.props.draw}</span>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs lg=\"2\">\r\n                                <div className={style.column}>\r\n                                    <h6>ПРОИГРАЛ</h6>\r\n                                    <span>{this.props.compPoints}</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col>\r\n                                <div className={style.winner}>\r\n                                    <h1>{this.props.winner}</h1>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport style from './PlayerValue.module.css'\r\n\r\n\r\nclass PlayerValue extends React.Component {\r\n    render() {\r\n        let itemList = this.props.value.map((p, index) => <li key={index}>{p.player}</li>);\r\n        return (\r\n            <div className={style.playerValue}>\r\n                <h5>ИГРОК</h5>\r\n                <ul>\r\n                    {itemList}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerValue;","import React from \"react\";\r\nimport style from './CompValue.module.css'\r\n\r\n\r\nclass CompValue extends React.Component {\r\n    render() {\r\n        let itemList = this.props.value.map((c, index) => <li key={index}>{c.comp}</li>);\r\n        return (\r\n            <div className={style.compValue}>\r\n                <h5>СКАЙНЕТ</h5>\r\n                <ul>\r\n                    {itemList}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CompValue;","import React from 'react';\r\nimport './App.css';\r\nimport Game from \"./components/Game/Game\";\r\nimport PlayerValue from \"./components/Game/PlayerValue/PlayerValue\";\r\nimport CompValue from \"./components/Game/CompValue/CompValue\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            game: [\r\n                {player: ''},\r\n                {comp: ''}\r\n            ],\r\n            winner: \" \",\r\n            playerValue: \"\",\r\n            compValue: \"\",\r\n            playerPoints: 0,\r\n            compPoints: 0,\r\n            draw: 0,\r\n        };\r\n    }\r\n\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        let playerValue = e.currentTarget.id;\r\n        let compValue = this.getCompChoise();\r\n        let winner = this.game(playerValue, compValue);\r\n        let forStatePlayer = {player: playerValue};\r\n        let forStateComp = {comp: compValue};\r\n        let newItem = [...this.state.game, forStatePlayer, forStateComp];\r\n        this.whoWinner(winner);\r\n        this.setState(\r\n            {\r\n                game: newItem,\r\n                winner,\r\n                playerValue,\r\n                compValue,\r\n            });\r\n    };\r\n\r\n    whoWinner = (winner) => {\r\n        if ( winner === \"Ты выиграл!\") {\r\n            this.setState((prevState) => ({playerPoints: prevState.playerPoints + 1}));\r\n        } else if (winner === \"Скайнет выиграл\" ) {\r\n            this.setState((prevState) => ({compPoints: prevState.compPoints + 1}));\r\n        } else {\r\n            this.setState((prevState) => ({draw: prevState.draw + 1}));\r\n        }\r\n    };\r\n\r\n    getCompChoise = () => {\r\n        let comMove = Math.random();\r\n        if (comMove <= 0.33) {\r\n            return \"камень\";\r\n        } else if (comMove <= 0.61) {\r\n            return \"бумага\";\r\n        } else {\r\n            return \"ножницы\";\r\n        }\r\n    };\r\n\r\n    game = (a, b) => {\r\n        if (a === b) {\r\n            return (\"Победила дружба!\");\r\n        } else if (a === \"камень\") {\r\n            if (b === \"ножницы\") {\r\n                return (\"Ты выиграл!\");\r\n            } else {\r\n                return (\"Скайнет выиграл\");\r\n            }\r\n        } else if (a === \"бумага\") {\r\n            if (b === \"камень\") {\r\n                return (\"Ты выиграл!\");\r\n            } else {\r\n                return (\"Скайнет выиграл\");\r\n            }\r\n        } else if (a === \"ножницы\") {\r\n            if (b === \"бумага\") {\r\n                return (\"Ты выиграл!\");\r\n            } else {\r\n                return (\"Скайнет выиграл\");\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs lg=\"2\">\r\n                            <PlayerValue value={this.state.game} />\r\n                        </Col>\r\n                        <Col xs lg=\"8\">\r\n                            <Game\r\n                                handleClick={this.handleClick}\r\n                                winner={this.state.winner}\r\n                                playerValue={this.state.playerValue}\r\n                                compValue={this.state.compValue}\r\n                                playerPoints={this.state.playerPoints}\r\n                                compPoints={this.state.compPoints}\r\n                                draw={this.state.draw}\r\n                            />\r\n                        </Col>\r\n                        <Col xs lg=\"2\">\r\n                            <CompValue  value={this.state.game}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}