{"version":3,"sources":["components/Game/Game.module.css","components/Game/PlayerValue/PlayerValue.module.css","components/Game/CompValue/CompValue.module.css","components/Game/Game.jsx","components/Game/PlayerValue/PlayerValue.jsx","components/Game/CompValue/CompValue.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Game","className","style","mainGame","header","game","buttonForGame","id","onClick","this","props","handleClick","resultGame","choise","floatLeft","playerValue","floatRight","compValue","winner","React","Component","PlayerValue","itemList","value","map","p","player","CompValue","c","comp","App","e","preventDefault","currentTarget","getCompChoise","forStatePlayer","forStateComp","newItem","state","setState","comMove","Math","random","a","b","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.584136b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainGame\":\"Game_mainGame__3Jm0X\",\"resultGame\":\"Game_resultGame__3GxEY\",\"choise\":\"Game_choise__J4csB\",\"game\":\"Game_game__2I0PQ\",\"buttonForGame\":\"Game_buttonForGame__2X0WG\",\"floatLeft\":\"Game_floatLeft__42bcZ\",\"floatRight\":\"Game_floatRight__1qNum\",\"winner\":\"Game_winner__3wlwR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerValue\":\"PlayerValue_playerValue__3u-vT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"compValue\":\"CompValue_compValue__3Xq2A\"};","import React from \"react\";\r\nimport style from './Game.module.css'\r\n\r\nclass Game extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.mainGame}>\r\n                <div className={style.header}>\r\n                    <h1>Привет, давай поиграем</h1>\r\n                </div>\r\n\r\n                <div className={style.game}>\r\n                    <p>Сделай свой выбор</p>\r\n                    <div className={style.buttonForGame}>\r\n                        <button id=\"камень\" onClick={this.props.handleClick}>Камень</button>\r\n                        <button id=\"ножницы\" onClick={this.props.handleClick}>Ножницы</button>\r\n                        <button id=\"бумага\" onClick={this.props.handleClick}>Бумага</button>\r\n                    </div>\r\n                </div>\r\n                <div className={style.resultGame}>\r\n                    <div className={style.choise}>\r\n                        <p className={style.floatLeft}>Игрок выбрал <br/> {this.props.playerValue}</p>\r\n\r\n                        <p className={style.floatRight}>Скайнет выбрал <br/> {this.props.compValue}</p>\r\n                    </div>\r\n\r\n                    <div className={style.winner}>\r\n                        <h2>{this.props.winner}</h2>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport style from './PlayerValue.module.css'\r\n\r\n\r\nclass PlayerValue extends React.Component {\r\n    render() {\r\n        let itemList = this.props.value.map(p => <li>{p.player}</li>);\r\n        return (\r\n            <div className={style.playerValue}>\r\n                <span>ИГРОК</span>\r\n                <ul>\r\n                    {itemList}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerValue;","import React from \"react\";\r\nimport style from './CompValue.module.css'\r\n\r\n\r\nclass CompValue extends React.Component {\r\n    render() {\r\n        let itemList = this.props.value.map(c => <li>{c.comp}</li>);\r\n        return (\r\n            <div className={style.compValue}>\r\n                <span>СКАЙНЕТ</span>\r\n                <ul>\r\n                    {itemList}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CompValue;","import React from 'react';\nimport './App.css';\nimport Game from \"./components/Game/Game\";\nimport PlayerValue from \"./components/Game/PlayerValue/PlayerValue\";\nimport CompValue from \"./components/Game/CompValue/CompValue\";\n\nclass App extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            game: [\n                {player: ''},\n                {comp: ''}\n            ],\n            winner: \"\",\n            playerValue: \"\",\n            compValue: \"\"\n        };\n    }\n\n\n    handleClick = (e) => {\n        e.preventDefault();\n        let playerValue = e.currentTarget.id;\n        let compValue = this.getCompChoise();\n        let winner = this.game(playerValue, compValue);\n        let forStatePlayer = {player: playerValue};\n        let forStateComp = {comp: compValue};\n        let newItem = [...this.state.game, forStatePlayer, forStateComp];\n        this.setState(\n            {\n                game: newItem,\n                winner,\n                playerValue,\n                compValue\n            });\n    };\n\n    getCompChoise = () => {\n        let comMove = Math.random();\n        if (comMove <= 0.33) {\n            return \"камень\";\n        } else if (comMove <= 0.61) {\n            return \"бумага\";\n        } else {\n            return \"ножницы\";\n        }\n    };\n\n    game = (a, b) => {\n        if (a === b) {\n            return (\"Победила дружба!\");\n        } else if (a === \"камень\") {\n            if (b === \"ножницы\") {\n                return (\"Ты выиграл!\");\n            } else {\n                return (\"Скайнет выиграл\");\n            }\n        } else if (a === \"бумага\") {\n            if (b === \"камень\") {\n                return (\"Ты выиграл!\");\n            } else {\n                return (\"Скайнет выиграл\");\n            }\n        } else if (a === \"ножницы\") {\n            if (b === \"бумага\") {\n                return (\"Ты выиграл!\");\n            } else {\n                return (\"Скайнет выиграл\");\n            }\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <PlayerValue value={this.state.game} />\n                    <Game\n                        handleClick={this.handleClick}\n                        winner={this.state.winner}\n                        playerValue={this.state.playerValue}\n                        compValue={this.state.compValue}\n                    />\n                    <CompValue  value={this.state.game}/>\n\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}